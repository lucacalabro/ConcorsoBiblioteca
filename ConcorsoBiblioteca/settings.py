"""
Django settings for ConcorsoBiblioteca project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!+x760w+xf+f3oo8o661tdxkoma@^x0!702sc2^squcw9c0_qh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',  # autenticazione social

    # 'social',  # <--

    'allauth',  # autenticazione social
    'allauth.account',  # autenticazione social
    'allauth.socialaccount',  # autenticazione social
    'allauth.socialaccount.providers.google',  # autenticazione social

    'crispy_forms',  # libreria grafica web
    'autore',
    'segreteria',
    'gestore',
    'valutatore',
    'home',

]

CRISPY_TEMPLATE_PACK = "bootstrap4"  # template pack da usare con django_crispy_forms

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ConcorsoBiblioteca.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'gestore/templates',
            BASE_DIR / 'valutatore/templates',
            BASE_DIR / 'autore/templates',
            BASE_DIR / 'segreteria/templates',
            BASE_DIR / 'home/templates',
        ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ConcorsoBiblioteca.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'concorsoletterario',
        'USER': 'concorsoletterarioadmin@sidbaplus.mysql.database.azure.com',  # utente amministrativo
        'PASSWORD': 'WE;~(N,9/8&))<wj',  # utente amministrativo
        'HOST': 'sidbaplus.mysql.database.azure.com',
        'PORT': '3306',
        'OPTIONS': {
            # Enable MySQL strict mode. "MySQL's Strict Mode fixes many data
            # integrity problems in MySQL, such as data truncation upon
            # insertion, by escalating warnings into errors."
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            # Use MySQL's READ COMMITTED isolation level rather than the default
            # of REPEATABLE READ as recommended: "Django works best with and
            # defaults to read committed rather than MySQL's default, repeatable
            # read. Data loss is possible with repeatable read."
            'isolation_level': 'read committed',
            # Support full Unicode in MySQL databases by using utf8mb4 instead
            # of utf8. Fixes: OperationalError: (1366, "Incorrect string value:
            # ...").
            'charset': 'utf8mb4',

        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/


LANGUAGE_CODE = 'it'

TIME_ZONE = 'Europe/Rome'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATETIME_INPUT_FORMATS = [
    '%Y-%m-%d %H:%M:%S',  # '2006-10-25 14:30:59'
    '%Y-%m-%d %H:%M:%S.%f',  # '2006-10-25 14:30:59.000200'
    '%Y-%m-%d %H:%M',  # '2006-10-25 14:30'
    '%Y-%m-%d',  # '2006-10-25'
    '%d/%m/%Y %H:%M:%S',  # '25/10/2006 14:30:59'
    '%d/%m/%Y %H:%M:%S.%f',  # '25/10/2006 14:30:59.000200'
    '%d/%m/%Y %H:%M',  # '25/10/2006 14:30'
    '%d/%m/%Y',  # '25/10/2006'
    '%d/%m/%y %H:%M:%S',  # '25/10/06 14:30:59'
    '%d/%m/%y %H:%M:%S.%f',  # '25/10/06 14:30:59.000200'
    '%d/%m/%y %H:%M',  # '25/10/06 14:30'
    '%d/%m/%y',  # '25/10/06'
]

DATE_FORMAT = '%Y-%m-%d %H:%M:%S'

AUTHENTICATION_BACKENDS = (  # <--

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

)

SOCIALACCOUNT_PROVIDERS = {  # <--
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'APP': {
            'client_id': '592186416594-4m70iso98th5hl4k3oeal7ro4fk5bd2f.apps.googleusercontent.com',
            'secret': 'AzVHVtvqUh_2eDa-Fw38_rYk',
            'key': ''
        }
    }
}

SITE_ID = 1  # <--

# or any other page
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

# redirects to profile page if not configured.
LOGIN_REDIRECT_URL = '/home/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
ACCOUNT_LOGOUT_ON_GET = True  # <--

STATIC_URL = '/static/'

EMAIL_SENDER_USERNAME = 'serviziwebsi@unimib.it'
EMAIL_SENDER_PASSWORD = '?sciliam*15'

# @login_required

# REST gestionale utenti ed informazioni studenti
GESTIONALE_UTENTI_REST_USERNAME = "forms"
GESTIONALE_UTENTI_REST_PASSWORD = "yg7dpwn0.pdk69gn"
GESTIONALE_UTENTI_APPELLI_URL = "https://equipe.si.unimib.it/equipe-web/webresources/ActionFormsStudente" \
                                "/appelliLaurea/aaId/{{anno}}/cdsCod/{{corsoID}} "

GESTIONALE_UTENTI_ANAGRAFICA_STUDENTI_URL = ["https://equipe.si.unimib.it/equipe-web/webresources"
                                             "/ActionFormsStudente/matricola/",
                                             "https://equipe.si.unimib.it/equipe-web/webresources"
                                             "/ActionFormsStudente/codFis/",
                                             "https://equipe.si.unimib.it/equipe-web/webresources"
                                             "/ActionFormsStudente/emailAte/"]
GESTIONALE_UTENTI_ANAGRAFICA_DIPENDENTI_URL = ["https://equipe.si.unimib.it/equipe-web/webresources"
                                               "/ActionFormsRu/matricola/",
                                               "https://equipe.si.unimib.it/equipe-web/webresources"
                                               "/ActionFormsRu/codFis/",
                                               "https://equipe.si.unimib.it/equipe-web/webresources"
                                               "/ActionFormsRu/email/"]

CATEGORIE_ETA = ('Junior', 'Senior')

COUNTER = 300  # <-Valore iniziale counter per i racconti

MAX_NUM_CHAR = 8000  # <-Numero massimo di caratteri consentiti per il racconto

NUM_PAGE = 10  # <- Numero pagine usate nella paginazione

RANKING_POINT = (3, 2, 1)  # <- Punti assegnati ad un racconto da un valutatore (primo, secondo terzo)
